package `fun`.familyfunforce.cosmos.event

import com.simsilica.es.EntityId
import com.simsilica.event.EventType

/*
Ship Order Events are events generated by either the player or the ai. These events will be read by their respective listeners
and execute the order. This allows us to have ai systems who can generate ship orders the same way a player can by
interacting with ui elements, therefore decoupling the two systems from each other as much as possible

All orders should use the following conventions
shipId: id of the ship who will perform the order
targetId: id of an entity who will be the target of a given order
 */

class OrbitOrderEvent(val shipId: EntityId, val targetId: EntityId, val range:Double){
    companion object{
        val orbitTarget:EventType<OrbitOrderEvent> = EventType.create("orbitTarget", OrbitOrderEvent::class.java)
    }
}

class ThrottleOrderEvent(val shipId: EntityId, val throttle:Double){
    companion object{
        val setThrottle:EventType<ThrottleOrderEvent> = EventType.create("setThrottle", ThrottleOrderEvent::class.java)
    }
}